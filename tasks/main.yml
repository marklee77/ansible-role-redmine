---

#   - build-essential
#   - checkinstall
#   - cmake
#   - curl
#   - libcurl4-openssl-dev
#   - libffi-dev
#   - libgdbm-dev
#   - libicu-dev
#   - libmariadbclient-dev
#   - libncurses5-dev
#   - libreadline-dev
#   - libssl-dev
#   - libxml2-dev
#   - libxslt1-dev
#   - libyaml-dev
#   - redis-server
#   - zlib1g-dev

- name: ensure redmine dependency packages are installed
  apt: 
    pkg: "{{ item }}" 
    state: latest 
    update_cache: yes 
    cache_valid_time: 600
  with_items:
    - bundler
    - git
    - logrotate
    - nginx
    - python-mysqldb
    - ruby1.9.1
    - ruby1.9.1-dev

#- name: ensure that redmine user exists in ldap
#  ldap:
#    bind_dn: cn=admin,{{ ldap_auth_base_dn }}
#    bind_password: "{{ ldap_auth_admin_password }}"
#    entry_dn: uid=redmine,ou=services,{{ ldap_auth_base_dn }}
#    attributes:
#      - objectClass: account
#      - objectClass: simpleSecurityObject
#      - uid: redmine
#      - userPassword: "{{ redmine_ldap_password|ssha_password_hash(redmine_ldap_password_salt) }}"
#    modify_action: replace
#    state: present
#  when: redmine_enable_ldap
#  notify:
#    - restart redmine

- name: ensure that redmine group exists
  group:
    name: redmine
    state: present

- name: ensure that redmine user exits
  user:
    name: redmine
    group: redmine
    home: /srv/redmine
    createhome: no
    state: present

- name: check redmine out of git repository
  git:
    repo: https://github.com/redmine/redmine.git
    accept_hostkey: yes
    version: "{{ redmine_checkout_version }}"
    dest: /srv/redmine
    update: no

- name: ensure publicly /srv/redmine exists and has correct ownership
  file:
    path: /srv/redmine
    owner: redmine
    group: redmine
    recurse: yes
    state: directory

#- name: update /home/git/.gitconfig from template
#  template:
#    src: home/git/.gitconfig
#    dest: /home/git/.gitconfig
#    owner: git
#    group: git
#    mode: 0600

#- name: ensure /srv/git exists and links to /home/git
#  file:
#    path: /srv/git
#    src: /home/git
#    force: yes
#    state: link

- name: ensure redmine database is present
  mysql_db: 
    login_host: "{{ redmine_mysql_host }}"
    login_user: root
    login_password: "{{ redmine_root_mysql_password }}"
    name: redmine

- name: ensure redmine database user is present
  mysql_user: 
    login_host: "{{ redmine_mysql_host }}"
    login_user: root
    login_password: "{{ redmine_root_mysql_password }}"
    name: redmine
    host: "{{ item }}" 
    password: "{{ redmine_redmine_mysql_password }}" 
    priv: redmine.*:ALL
  with_items:
    - "%"
    - localhost

- name: update /srv/.my.cnf from template
  template:
    src: srv/redmine/.my.cnf
    dest: /srv/redmine/.my.cnf
    owner: redmine
    group: redmine
    mode: 0600

- name: ensure that the system ruby points to 1.9.1
  alternatives:
    name: ruby
    link: /usr/bin/ruby
    path: /usr/bin/ruby1.9.1

- name: ensure that the system gem points to 1.9.1
  alternatives:
    name: gem
    link: /usr/bin/gem
    path: /usr/bin/gem1.9.1

#- name: ensure publicly accessible redmine subdirectories exist and have correct permissions
#  file:
#    path: "{{ item }}"
#    owner: git
#    group: git
#    mode: 0755
#    state: directory
#  with_items:
#    - /home/git/redmine/tmp
#    - /home/git/redmine/tmp/sockets
#    - /home/git/redmine/public
#    - /home/git/redmine/public/uploads

#- name: ensure private redmine subdirectories exist and have correct permissions
#  file:
#    path: "{{ item }}"
#    owner: git
#    group: git
#    mode: 0750
#    state: directory
#  with_items:
#    - /home/git/redmine/log
#    - /home/git/redmine/tmp/pids
#    - /home/git/redmine-satellites

#- name: ensure repository directories exist and have correct permissions
#  file:
#    path: "{{ item }}"
#    owner: git
#    group: git
#    mode: 02770
#    state: directory
#  with_items:
#    - /home/git/repositories
#    - /home/git/repositories/root

#- name: update redmine configuration files from templates
#  template:
#    src: home/git/redmine/{{ item }}
#    dest: /home/git/redmine/{{ item }}
#    owner: git
#    group: git
#    mode: 0600
#  with_items:
#    - config/redmine.yml
#    - config/database.yml
#    - config/unicorn.rb
#    - db/fixtures/production/001_admin.rb
#  notify:
#    - restart redmine

- name: bundle install ruby gems
  sudo_user: redmine
  shell: bundle install --deployment --without development test && touch .bundle_installed
         executable=/bin/bash
         chdir=/srv/redmine
         creates=/srv/redmine/.bundle_installed

- name: generate secret token
  sudo_user: redmine
  shell: bundle exec rake generate_secret_token && touch .generate_secret_toeken
         executable=/bin/bash
         chdir=/srv/redmine
         creates=/srv/redmine/.generate_secret_token

- name: create database schema objects
  sudo_user: redmine
  shell: bundle exec rake db:migrate RAILS_ENV=production && touch .db_migrate
         executable=/bin/bash
         chdir=/srv/redmine
         creates=/srv/redmine/.db_migrate

- name: load default data
  sudo_user: redmine
  shell: bundle exec rake redmine:load_default_data RAILS_ENV=production && touch .load_default_data
         executable=/bin/bash
         chdir=/srv/redmine
         creates=/srv/redmine/.load_default_data

#- name: precompile assets
#  sudo_user: git
#  shell: bundle exec rake assets:precompile RAILS_ENV=production && touch .assets_precompiled
#         executable=/bin/bash
#         chdir=/home/git/redmine
#         creates=/home/git/redmine/.assets_precompiled

#- name: ensure redmine links into /etc exist
#  file:
#    path: "{{ item.path }}"
#    src: "{{ item.src }}"
#    force: yes
#    state: link
#  with_items:
#    - { path: /etc/init.d/redmine, src: /home/git/redmine/lib/support/init.d/redmine }
#    - { path: /etc/default/redmine, src: /home/git/redmine/lib/support/init.d/redmine.default.example }
#    - { path: /etc/logrotate.d/redmine, src: /home/git/redmine/lib/support/logrotate/redmine }

#- name: update /etc/nginx/sites-available/redmine from template
#  template:
#    src: etc/nginx/sites-available/redmine
#    dest: /etc/nginx/sites-available/redmine
#    owner: root
#    group: root
#    mode: 0644
#  notify:
#    - restart nginx

#- name: ensure /etc/nginx/sites-enabled/redmine exists and links to ../sites-available/redmine
#  file:
#    path: /etc/nginx/sites-enabled/redmine
#    src: ../sites-available/redmine
#    force: yes
#    state: link
#  notify:
#    - restart nginx

#- name: ensure that there is not a hostname collision with the nginx default host
#  lineinfile:
#    dest: /etc/nginx/sites-available/default
#    regexp: '^(\s+)(server_name {{ redmine_hostname }};.*)$'
#    backrefs: yes
#    line: '\1#\2'
#    state: present
#  notify:
#    - restart nginx

#- name: ensure redmine services are started and enabled
#  service:
#    name: "{{ item }}"
#    state: started
#    enabled: yes
#  with_items:
#    - redmine
#    - nginx

